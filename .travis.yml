sudo : required 
dist : trusty
language: cpp

env:
#        - ENABLE_INTERNAL_METEODISTR=ON
#        - ENABLE_INTERNAL_METEODISTR=OFF  (deactivated to speed up checking )
#        - CMAKE_BUILD_TYPE="RELEASE"
#        - CMAKE_BUILD_TYPE="DEBUG"

#installing the dependencies: proj and meteoio libraries
install:
        #install required boost libraries
        - pip list
        - sudo apt-get install libboost-all-dev
        - sudo apt-get install doxygen

        #it's supposed to be run in a environment with the access to apt-get (following travis guide)
        - sudo apt-get install libproj-dev
        #in case it is needed you can install a specific version of the library
        #- apt-get install libproj-dev=version

        #meteio install
        - wget https://models.slf.ch/p/meteoio/downloads/get/MeteoIO-2.5.1-src.tar.gz
        - tar xvf MeteoIO-2.5.1-src.tar.gz meteoio
        - cd meteoio/
        #add dependency for proj4 in cmake for meteoio
        - cmake -DPROJ4:BOOL=ON .
        - cmake -LAH
        - make && sudo make install
        - cd ..

        #install nosetests dependency
        - sudo apt-get install python-pandas
        - sudo apt-get install python-nose

#actually build the geotop program
script:
        #build geotop with meteoio disabled
        #- cmake -DENABLE_INTERNAL_METEODISTR:BOOL=$ENABLE_INTERNAL_METEODISTR .
        #- cmake -DENABLE_INTERNAL_METEODISTR:BOOL=$ENABLE_INTERNAL_METEODISTR -DCMAKE_BUILD_TYPE:STRING=$CMAKE_BUILD_TYPE .
        - cmake .
        - make
        #make tests with this environment
        #- if [ "$ENABLE_INTERNAL_METEODISTR" = "OFF" ]; then travis_wait 90 ctest -j19 -E "bonn_1|bonn_2|rendena|CostantMeteo|snow_dstr_SENSITIVITY" .; else travis_wait 90 ctest -j19 .; fi
        - travis_wait 90 ctest -j19    
#choosing the compiler
compiler:
        - g++
